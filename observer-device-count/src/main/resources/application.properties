quarkus.kafka-streams.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
quarkus.http.port=8082
quarkus.kafka-streams.application-id=observer-device-count
quarkus.kafka-streams.topics=players-summary,devices
quarkus.kafka.health.enabled=true
quarkus.http.host=0.0.0.0

# streams options - perfil produção

# Lê a partir do último offset disponível caso não exista offset salvo.
# Você pode usar 'earliest' se quiser garantir processamento desde o início em topologias de reprocessamento.
quarkus.kafka-streams.configuration.auto.offset.reset=latest

# Tamanho da cache usada para buffering interno de state stores, joins e agregações.
# Valores maiores melhoram performance, mas aumentam latência. Padrão: 100MB (104857600).
quarkus.kafka-streams.configuration.cache.max.bytes.buffering=10485760  # 10 MB

# Frequência com que offsets são comitados no Kafka.
# Padrão é 30s (30000). Reduza apenas se precisar de menor tempo de recuperação após falhas.
quarkus.kafka-streams.configuration.commit.interval.ms=10000  # 10s

# Frequência de atualização da metadata do cluster Kafka.
# Menos frequente reduz overhead. Padrão: 5 minutos.
quarkus.kafka-streams.configuration.metadata.max.age.ms=300000  # 5 min

# Desativa métricas detalhadas em produção para reduzir overhead.
quarkus.kafka-streams.configuration.metrics.recording.level=INFO

# Intervalo de heartbeat do consumidor. Deve ser compatível com session.timeout.ms.
# Manter em padrão ou um pouco abaixo (ex: 3s).
quarkus.kafka-streams.configuration.consumer.heartbeat.interval.ms=3000

# Timeout da sessão do consumidor (se quiser configurar também).
# Deve ser maior que o heartbeat.interval.ms. Ex: 10s
quarkus.kafka-streams.configuration.session.timeout.ms=10000

quarkus.log.category."org.apache.kafka.streams".level=INFO

quarkus.kafka.devservices.image-name=redpandadata/redpanda
quarkus.kafka-streams.state.dir=/tmp/kafka-streams

# Protocolo de segurança
kafka.security.protocol=SSL
#kafka.security.protocol=PLAINTEXT

# Usado para evitar erro de verificação de hostnames (útil com MSK e SSL)
ssl.endpoint.identification.algorithm=
